// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

enum Gender {
  men
  women
  kid
  unisex
}

enum Role {
  admin
  user
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          Role      @default(user)
  image         String?

  address UserAddress?
}

model UserAddress {
  id         String  @id @default(uuid())
  firstName  String
  lastName   String
  address    String
  address2   String?
  postalCode String
  phone      String
  city       String

  // Relaciones
  country   Country @relation(fields: [countryId], references: [id])
  countryId String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}



model Country {
  id          String        @id
  name        String
  UserAddress UserAddress[]
}

model Category {
  id      String    @id @default(uuid())
  name    String    @unique
  Product Product[]
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String
  gender      Gender
  inStock     Int
  price       Float    @default(0)
  sizes       Size[]   @default([])
  slug        String   @unique
  tags        String[] @default([])

  //Relación entre producto y productImage que es donde se guardan las imágenes
  ProductImage ProductImage[]

  //Relación entre producto y categoría
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  // El indice se crea para facilidad cuando se quiera mostrar todos los productos que tengan cierto indice
  @@index([gender])
}

model ProductImage {
  id  Int    @id @default(autoincrement())
  url String

  //Relación con productId con referencia al id del producto
  product   Product @relation(fields: [productId], references: [id])
  productId String
}
